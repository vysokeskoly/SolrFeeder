#!/usr/bin/env php
<?php

namespace VysokeSkoly\SolrFeeder;

use Symfony\Component\Console\Application;
use VysokeSkoly\SolrFeeder\Command\FeedCommand;
use VysokeSkoly\SolrFeeder\Facade\FeedFacade;
use VysokeSkoly\SolrFeeder\Service\DatabaseFactory;
use VysokeSkoly\SolrFeeder\Service\DatabaseModel;
use VysokeSkoly\SolrFeeder\Service\DataMapper;
use VysokeSkoly\SolrFeeder\Service\Log;
use VysokeSkoly\SolrFeeder\Service\Notifier;
use VysokeSkoly\SolrFeeder\Service\SolrFactory;
use VysokeSkoly\SolrFeeder\Service\SolrFeeder;
use VysokeSkoly\SolrFeeder\Service\TimestampUpdater;
use VysokeSkoly\SolrFeeder\Service\XmlParser;
use VysokeSkoly\SolrFeeder\Utils\StringHelper;

function requireIfExists(string $file)
{
    if (file_exists($file)) {
        return require_once $file;
    }

    return null;
}

if (!requireIfExists(__DIR__ . '/../vendor/autoload.php') // when used directly
    && !requireIfExists(__DIR__ . '/../../../autoload.php') // when installed as dependency
) {
    die(
        'You must set up the project dependencies, run the following commands:' . PHP_EOL .
        'curl -sS https://getcomposer.org/installer | php' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

date_default_timezone_set('Europe/Prague');

$composer = json_decode(file_get_contents(__DIR__ . '/../composer.json'));

// services definition
$notifier = new Notifier();

$feedFacade = new FeedFacade(
    new XmlParser(),
    new DatabaseFactory(),
    new DatabaseModel(new DataMapper($notifier), new StringHelper(), $notifier),
    new SolrFactory($notifier),
    new SolrFeeder($notifier, new TimestampUpdater()),
    new Log()
);

// app definition
$application = new Application('solr-feeder-console', $composer['version']);
$application->addCommands([
    new FeedCommand($feedFacade, $notifier),
]);
$application->run();

exit;
